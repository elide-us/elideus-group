// ================================================
// WARNING: This file is automatically generated.
// Do not modify it by hand. Your changes will be
// overwritten the next time the generator runs.
// ================================================

import axios from 'axios';
import { RPCRequest, RPCResponse, AdminVarsFfmpegVersion1, AdminVarsHostname1, AdminVarsRepo1, AdminVarsVersion1 } from '../../../shared/RpcModels';

const rpcCall = async <T>(op: string, payload: any = null): Promise<T> => {
    const request: RPCRequest = {
        op,
        payload,
        version: 1,
        timestamp: Date.now(),
        metadata: null,
    };
    const response = await axios.post<RPCResponse>('/rpc', request);
    return response.data.payload as T;
};

export const fetchVersion = (payload: any = null): Promise<AdminVarsVersion1> => rpcCall('urn:admin:vars:get_version:1', payload);
export const fetchHostname = (payload: any = null): Promise<AdminVarsHostname1> => rpcCall('urn:admin:vars:get_hostname:1', payload);
export const fetchRepo = (payload: any = null): Promise<AdminVarsRepo1> => rpcCall('urn:admin:vars:get_repo:1', payload);
export const fetchFfmpegVersion = (payload: any = null): Promise<AdminVarsFfmpegVersion1> => rpcCall('urn:admin:vars:get_ffmpeg_version:1', payload);
