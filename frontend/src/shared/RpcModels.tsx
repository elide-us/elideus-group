// ================================================
// WARNING: This file is automatically generated.
// Do not modify it by hand. Your changes will be
// overwritten the next time the generator runs.
// ================================================

import axios from "axios";

export interface BrowserSessionData1 {
  bearerToken: string | null;
  rotationToken: string | null;
  rotationExpires: any | null;
}
export interface RPCRequest {
  op: string;
  payload: any | null;
  version: number;
  timestamp: any | null;
  metadata: any | null;
}
export interface RPCResponse {
  op: string;
  payload: any;
  version: number;
  timestamp: any;
  metadata: any | null;
}
export interface UserData {
  bearerToken: string;
}
export interface FrontendUserProfileData1 {
  bearerToken: string;
  defaultProvider: string;
  username: string;
  email: string;
  backupEmail: string | null;
  profilePicture: string | null;
  credits: number | null;
  storageUsed: number | null;
  displayEmail: boolean;
  rotationToken: string | null;
  rotationExpires: any | null;
}
export interface FrontendUserSetDisplayName1 {
  bearerToken: string;
  displayName: string;
}
export interface AuthMicrosoftLoginData1 {
  bearerToken: string;
  defaultProvider: string;
  username: string;
  email: string;
  backupEmail: string | null;
  profilePicture: string | null;
  credits: number | null;
  rotationToken: string | null;
  rotationExpires: any | null;
}
export interface AuthSessionTokens1 {
  bearerToken: string;
  rotationToken: string;
  rotationExpires: any;
}
export interface AdminUserCreditsUpdate1 {
  userGuid: string;
  credits: number;
}
export interface AdminUserProfile1 {
  guid: string;
  defaultProvider: string;
  username: string;
  email: string;
  backupEmail: any;
  profilePicture: any;
  credits: any;
  storageUsed: any;
  displayEmail: boolean;
  rotationToken: any;
  rotationExpires: any;
}
export interface AdminUserRoles1 {
  roles: string[];
}
export interface AdminUserRolesUpdate1 {
  userGuid: string;
  roles: string[];
}
export interface AdminUsersList1 {
  users: UserListItem[];
}
export interface UserListItem {
  guid: string;
  displayName: string;
}
export interface AdminLinksHome1 {
  links: LinkItem[];
}
export interface AdminLinksRoutes1 {
  routes: RouteItem[];
}
export interface LinkItem {
  title: string;
  url: string;
}
export interface RouteItem {
  path: string;
  name: string;
  icon: string;
}
export interface AdminVarsFfmpegVersion1 {
  ffmpeg_version: string;
}
export interface AdminVarsHostname1 {
  hostname: string;
}
export interface AdminVarsRepo1 {
  repo: string;
}
export interface AdminVarsVersion1 {
  version: string;
}
export interface ViewDiscord1 {
  content: string;
}

export async function rpcCall<T>(op: string, payload: any = null): Promise<T> {
    const request: RPCRequest = {
        op,
        payload,
        version: 1,
        timestamp: Date.now(),
        metadata: null,
    };
    const response = await axios.post<RPCResponse>('/rpc', request);
    return response.data.payload as T;
}
